<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC "-//Hibernate/Hibernate Configuration DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>
		<!-- 显示实际操作数据库时的SQL -->
		<property name="show_sql">false</property>

		<!-- druid -->
		<property name="connection.provider_class">com.alibaba.druid.support.hibernate.DruidConnectionProvider</property>
		<!-- 测试 192.168.0.13 -->
		<property name="url">jdbc:mysql://mysql.test:3306/user?useLocalSessionState=true&amp;characterEncoding=utf8&amp;useSSL=true&amp;verifyServerCertificate=false&amp;serverTimezone=UTC</property>
		<property name="username">root</property>
		<property name="password">langyemysql##123</property>
		<property name="driverClassName">com.mysql.cj.jdbc.Driver</property>
		<!-- 方言 -->
		<property name="dialect">org.hibernate.dialect.MySQL8Dialect</property>

		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize">10</property>
		<property name="minIdle">10</property>
		<property name="maxActive">20</property>

		<!-- 配置获取连接等待超时的时间 -->
		<property name="maxWait">60000</property>

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis">60000</property>

		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis">300000</property>

		<property name="validationQuery">SELECT 1</property>
		<property name="testWhileIdle">true</property>
		<property name="testOnBorrow">false</property>
		<property name="testOnReturn">false</property>

		<!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
		<property name="poolPreparedStatements">true</property>
		<property name="maxPoolPreparedStatementPerConnectionSize">20</property>

		<!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 <property name="filters">stat</property> -->
		<!-- 自动创建表 -->
		<property name="hibernate.hbm2ddl.auto">update</property>

		<!-- 对象与数据库表格映像文件 -->
		<mapping class="com.weicoder.user.po.Auth" />
		<mapping class="com.weicoder.user.po.User" />
		<mapping class="com.weicoder.user.po.UserIdPool" />
	</session-factory>
</hibernate-configuration>